C51 COMPILER V9.52.0.0   800U_R3N3                                                         08/08/2016 10:15:55 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE 800U_R3N3
OBJECT MODULE PLACED IN .\800U-R3N3.obj
COMPILER INVOKED BY: C:\Program Files\kile\C51\BIN\C51.EXE ..\SRC\800U-R3N3.c OMF2 BROWSE INCDIR(..\INC;..\SRC;..\PRO) D
                    -EBUG PRINT(.\800U-R3N3.lst) TABS(2) OBJECT(.\800U-R3N3.obj)

line level    source

   1          #define R3N3_GLOBAL
   2          #include "include.h"
*** ERROR C129 IN LINE 21 OF \公司项目\2016.07.25 800U-R3N3\firmware\800U-R3B3程序 - 2016-8-08\INC\800U-R3N3.h: missing 
             -';' before 'ledemicnt'
   3          //========================================================================================================
             -====
   4          
   5          
   6          //========================================================================================================
             -====
   7          
   8          
   9          //========================================================================
  10          /////////////////////////////////////////////////
  11          
  12          //=========================================================================                       
  13          void delay(void)                                                
  14          {  
  15            INT8U i,j;
  16              for(i=30;i>0;i--)
  17            for(j=30;j>0;j--) ;
  18          }
  19          
  20          // 延时ms
  21          void delay_Xms( INT16U cnt)                                             
  22          {  
  23          
  24            while(cnt > 0)
  25            {
  26                 delay();
  27               cnt--;
  28            }
  29          }
  30          /////////////////////////////////////////////////
  31          //void Comparator0_Init (void)
  32          //{CPT0MD=2;//反应时间320ns
  33          //CPT0MX=0x11;//P0.2+  P0.3-
  34          //CPT0CN=0x8C;//使能比较器，0x8F回差20mV
  35          //}
  36          /////////////////////////////////////////////////
  37          void Interrupt_Init (void)
  38          {
  39            EA = 1; //中断允许总控制位
  40          }
  41          // 使用内部晶振，4分频
  42          void OSCILLATOR_Init (void)
  43          {     
  44            INT8U i;
  45            OSCICN   = 0x05;      //频率为24.5Mhz /4
  46            for(i = 50; i>0; i--);
  47            while((OSCICN & 0x10) == 0) ;   // 判断是否正常振荡
  48          }
  49          /**************************************************************************************************
  50          Port I/O initialization consists of the following steps:
C51 COMPILER V9.52.0.0   800U_R3N3                                                         08/08/2016 10:15:55 PAGE 2   

  51          Step 1. Select the input mode (analog or digital) for all Port pins, using the Port0 Input Mode
  52          register (P0MDIN).
  53          Step 2. Select the output mode (open-drain or push-pull) for all Port pins, using the Port0 Output
  54          Mode register (P0MDOUT).
  55          Step 3. Set XBR0 to skip any pins selected as analog inputs or special functions.
  56          Step 4. Assign Port pins to desired peripherals.
  57          Step 5. Enable the Crossbar.
  58          ***************************************************************************************************/
  59          void PORT_Init (void)
  60          { 
  61            P0MDIN  = 0xFD; // P0.1,为模拟输入  0=模拟输入，1=数字输入
  62            P0MDOUT = 0x60; // P0.0,2,3,5,6为推挽输出方式 
  63            XBR0     = 0x02;  // 跳过P0.1   ，作为ADC输入
  64            XBR2    = 0X40; // 使能交叉开关，使能弱上拉
  65          
  66            // 关掉发射管
  67            pOUTPUT   = OFF;                                               //
  68            pLEDOUTB  = OFF;  
  69            pLEDOUTG  = OFF;  
  70            pLEDOUTR  = OFF;  
  71            pEMILEDCTL  = OFF;       // 管关断
  72          }
  73          
  74          /////////////////////////////////////////////////
  75          
  76          // ADC 采集
  77          INT8U ADC_Samp (void)
  78          {
  79            INT8U tmp,dat;
  80            AD0INT  = 0;  //清除转换完成标志
  81            AD0BUSY = 1;  //启动一次转换
  82            dat = 0;
  83            for(tmp = 100;tmp > 0;tmp --)     // F300  2*nop + 19*3*nop + 2*nop = 61nop = 61*40ns*4=9.6us
  84            {
  85              if( 1 == AD0INT )//超过限流值关断一段时间
  86              {
  87                AD0INT = 0;
  88                AD0BUSY = 0;
  89                dat =   ADC0;
  90                break;
  91              }               
  92            }
  93            return(dat);
  94          }
  95          
  96          /**************************************************************************************************
  97          Timer0 10us中断一次，发射管开通时间为10us
  98          ***************************************************************************************************/
  99          
 100          
 101          
 102          
 103          /////////////////////////////////////////////////
 104          void main(void)
 105          { 
 106            PCA0MD &= ~0x40;             //看门狗定时器被禁止
 107            RSTSRC |= 0x02;            //使能VDD电压监视
 108          //  OSCILLATOR_Init();           // Initialize the system clock
 109            PORT_Init ();            // Initialize crossbar and GPIO
 110            
 111            // 开灯 
 112            pLEDOUTR = ON;  
C51 COMPILER V9.52.0.0   800U_R3N3                                                         08/08/2016 10:15:55 PAGE 3   

 113            delay_Xms(500); 
 114            pLEDOUTR = OFF; 
 115          
 116            pLEDOUTG = ON;  
 117            delay_Xms(500);
 118            pLEDOUTG = OFF;
 119              
 120            pLEDOUTB = ON;  
 121            delay_Xms(500); 
 122            pLEDOUTB = OFF;
 123                                                   
 124                                                                                               //
 125            Timer0_Init ();            // Timer0 自动重装模式2
 126            ADC_Init ();             // 设置ADC
 127          //  Comparator0_Init();          // Initialize Comparator0
 128            OSCILLATOR_Init();           // Initialize the system clock
 129          //  Interrupt_Init ();            
 130          
 131            //  采集基准值
 132            {
 133              INT8U cnt,i;
 134              INT16U  sum = 0;  
 135              for(cnt = 128;cnt > 0;cnt-- )
 136              { 
 137                sum += ADC_Samp(); 
 138                for(i = 50; i > 0; i--) ; // 延时
 139              }
 140              RevBase =  sum/128;
 141            }
 142          //  RevBase =  111;
 143          
 144            PCA0CPL2 = 30;        // 33ms
 145            PCA0MD  |= 0x60;        // 看门狗定时器被启用 ，锁定看门狗
 146               
 147            out    = 0;         // 遮挡有效个数
 148          //  timinc = 0;  
 149          //  occnt  = 0;
 150            f_pross = FALSE;      // 清完整采集完成标标志
 151            Interrupt_Init ();      // 开中断
 152            while(1)
 153            {
 154              INT8U  dat0,dat1,dif;
 155              
 156              PCA0CPH2 = 1;//喂狗
 157          
 158              // 如果一次完整采集完成
 159              if( (f_pross == TRUE)&&(sampcnt > 0) )
 160              {
 161                 f_pross = FALSE;      // 清完整采集完成标标志
 162          
 163                 // 保证数组不超界
 164                 if(sampcnt >= SAMPCNTMAX)
 165                 {  sampcnt = SAMPCNTMAX; }
 166          
 167                 // 高端-低端 ，保存入difDat[]
 168                 dat0 = sampDat[sampcnt-1];
 169                 dat1 = DsampDat[sampcnt-1];
 170                 
 171                 if(dat0 > dat1)
 172                    { dif = dat0 - dat1; }
 173                 else { dif = dat1 - dat0; }
 174          
C51 COMPILER V9.52.0.0   800U_R3N3                                                         08/08/2016 10:15:55 PAGE 4   

 175                 difDat[sampcnt-1] = dif ;
 176          
 177                 // 取高端和低端与均值差值最大的存入dat0
 178                 if(dat0 > RevBase)
 179                    { dat0 = dat0 - RevBase; }
 180                 else { dat0 = RevBase - dat0; }
 181          
 182                 if(dat1 > RevBase)
 183                    { dat1 = dat1 - RevBase; }
 184                 else { dat1 = RevBase - dat1; }
 185          
 186                 if(dat0 < dat1) { dat0 = dat1 ; }
 187          
 188                 // 如果差值大于稳定值，或者单端-均值大于稳定值一半有多，则out+1，确认为遮挡
 189                 if( (dif >= WDVAL)||(dat0 >= (WDVAL/2+5)) )
 190                 { out++; }
 191                 // 如果差值小于无信号值，而且单端-均值大于稳定值一半有多，则out-1，确认为无遮挡
 192                 else if((dif <= NOVAL)&&(dat0 <= NOVAL))
 193                 { if(out > 0)out--; }
 194          
 195                 // 如果差值大于遮挡临界值，或者单端-均值大于临界值一半有多，则buwendin+1
 196                 if((dif >= WDSSVAL)||(dat0 >= (WDSSVAL/2+5)))
 197                 { buwendin++; }
 198                  // 如果无输出，且差值小于无遮挡临界值，且单端-均值大于临界值一半有多，则buwendin+1
 199                 else  if((f_OUT == FALSE)&&(dif <= NOSSVAL)&&(dat0 <= NOSSVAL))
 200                 { if(buwendin > 0)buwendin--; }
 201          
 202                 // 确保确认遮挡个数不超判断条件
 203                 if( out > PROSSCNT )   
 204                 { out = PROSSCNT; }
 205          
 206                 // 确保确认不稳定个数不超判断条件
 207                 if( buwendin > PROSSCNT )   
 208                 { buwendin = PROSSCNT; }   
 209              }
 210          
 211              // 处理一次输出标志，采集一定脉冲数再处理，每2ms处理一次
 212              if(f_prossout == TRUE)
 213              {
 214                f_prossout = FALSE;    // 清处理一次输出标志
 215          
 216                f_shanshuo = FALSE;    // 清闪烁标志
 217          
 218                // 判断遮挡有效次数，没有则关闭输出
 219                if(out <= 1)    //1
 220                  { 
 221                    f_OUT = FALSE;       // 清输出有效标志
 222                  pOUTPUT = OFF;       // 关输出
 223                    pLEDOUTG  = OFF;       // 关状态指示灯
 224                } 
 225                // 大于采集一半则认为有效
 226                else if(out > PROSSCNT/2)
 227                  {
 228                  f_OUT   = TRUE;      // 置输出有效标志
 229                  pOUTPUT = ON;      // 开输出
 230                  pLEDOUTG  = ON;      // 开状态指示灯        
 231                }
 232                else if(buwendin > PROSSCNT/2)  //8
 233                { 
 234                  f_shanshuo = TRUE;    // 置闪烁标志
 235                  count = 0;        // 清计数时间 
 236                }
C51 COMPILER V9.52.0.0   800U_R3N3                                                         08/08/2016 10:15:55 PAGE 5   

 237          
 238          
 239                // LED状态指示灯闪烁
 240                if(f_shanshuo == TRUE)
 241                {
 242                  if(count >= 20000)
 243                    { pLEDOUTG = ON; }
 244                  else{ pLEDOUTG = OFF; }
 245          
 246                  if( count >= 40000 )
 247                  { count = 0;   }
 248                }
 249              }
 250            } 
 251          }

C51 COMPILATION COMPLETE.  0 WARNING(S),  1 ERROR(S)
