C51 COMPILER V9.52.0.0   MAIN                                                              08/19/2016 18:27:55 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\main.obj
COMPILER INVOKED BY: C:\Program Files\kile\C51\BIN\C51.EXE ..\src\main.c OMF2 OPTIMIZE(6,SPEED) BROWSE DEBUG PRINT(.\src
                    -\main.lst) TABS(2) OBJECT(.\main.obj)

line level    source

   1          /*=========================================================
   2          // 程序更改说明
   3          //  2015年2月5日更改  版本v1.0
   4          //   1.在800U-T3N3 IB的基础上修改，取消485通信功能
   5               2.触控芯片为CBM7008
   6          //   MCU:STC15W408AS   8K Flash  512RAM  EEPROM 5K    UART 分组可当三组用 SOP16封装，14个IO口，
   7                   内带晶振和上电复位电路
   8          
   9          // 功能说明
  10          
  11          工作状态下
  12          有输入信号时，红灯亮，此时手按触控按键，红灯灭，绿灯亮，有信号输出，手离开触控按键后，绿灯灭，无输出信号。
  13          
  14          //  2015年8月5日更改  版本v1.1
  15            1.添加800U-P3N3 IO 型号，通过在main。h文件选择相应的型号进行条件编译，生成目标文件
  16          
  17          
  18          //  2015年8月24日更改  版本v2.0    GNN（G 有使能绿灯亮 N 有按键无灯亮 N 按键松开无灯亮）
  19          1.更改说明
  20          工作状态下 
  21          
  22               使能     按键      灯    输出
  23                
  24                 0       按下     灭     有
  25                 0       松开     灭     无
  26                 1       松开     绿     无
  27                 1       按下     绿     有
  28          
  29          使能：1 使能输入   0 无使能输入
  30          
  31          
  32          
  33          //  2015年9月8日更改  版本v2.1       适用800U T3N3 IO和800U P3N3 IO
  34          1.更改V2.0版本的架构，通过条件编译，使能时亮灯颜色，按键按下亮灯颜色，松开亮灯颜色可选择，如RGG GNN RGB GR
             -N等
  35          
  36          RGG （R 有使能红灯亮 G 有按键绿灯亮 G 按键松开绿灯亮）
  37          2.工作状态下 
  38          
  39                     使能        按键       灯      输出
  40                
  41                 0       按下     灭     有
  42                 0       松开     灭     无
  43                 1       松开     红     无
  44                 1       按下     绿（常亮）有     
  45          
  46          使能：1 使能输入   0 无使能输入
  47          
  48          
  49          客户定制5套，使能输入亮红灯 无输入灭  按键按下亮黄灯 松开灭   20151218
  50          
  51          =========================================================*/
  52          
  53          #define AP_CPU_GLOBALS  
C51 COMPILER V9.52.0.0   MAIN                                                              08/19/2016 18:27:55 PAGE 2   

  54          #include "extern_symbol.h" 
  55          
  56          INT8U sysStatus = SYSTEM_INIT;    //  0
  57          INT8U LedStatus = NONE;
  58          //INT8U p_mcu_flag = 0;    // 信号输出标志
  59          
  60          UINT8  KeyStatus = 0;   //按键状态
  61          UINT8  KeyStatus_flag = 0;    //按键状态标志
  62          UINT8  LedDelayCnt = 0;    //延时计数器
  63          
  64          
  65          /*******************************************************************************
  66                      1毫秒延迟函数
  67          *******************************************************************************/
  68          void Delay1Ms() 
  69          {
  70   1          UINT16 i = 852;
  71   1          while (i != 0) {i--;}
  72   1      }
  73          
  74          /*******************************************************************************
  75                      毫秒延迟函数
  76              input   usDelay     延迟时间值
  77            output  none
  78          *******************************************************************************/
  79          
  80          void DelayMs(UINT16 usDelay)
  81          {
  82   1          for(; usDelay>0; usDelay--)
  83   1          {
  84   2              Delay1Ms();
  85   2          }   
  86   1      }
  87          
  88          /*******************************************************************************
  89                      250uS毫秒延迟函数
  90          *******************************************************************************/
  91          // void Delay125Us() 
  92          // {
  93          //    UINT16 i = 426;
  94          //  //    UINT16 i = 156;
  95          //     while (i != 0) {i--;}
  96          // }
  97          
  98          
  99          void Timer0Init(void)   //50毫秒@11.0592MHz
 100          {
 101   1        AUXR &= 0x7F;   //定时器时钟12T模式
 102   1        TMOD &= 0x00;   //设置定时器模式
 103   1        TL0 = 0x00;   //定时初值
 104   1        TH0 = 0x4C;   //定时初值
 105   1        TF0 = 0;    //清除IF0标志
 106   1          ET0 = 1;
 107   1        TR0 = 1;    //定时器0开始计数
 108   1      }
 109          
 110          
 111          /*******************************************************************************
 112                       看门狗复位点亮蓝灯
 113          *******************************************************************************/
 114          void WDT_Reset(void)
 115          {
C51 COMPILER V9.52.0.0   MAIN                                                              08/19/2016 18:27:55 PAGE 3   

 116   1        WDT_CONTR = WDT_CONTR & 0x0F;
 117   1      }
 118          
 119          /*******************************************************************************
 120                        端口初始化
 121          *******************************************************************************/
 122          void IO_Init(void)
 123          {
 124   1        //推挽输出 PxM1和PxM0对应配成0x00,0x10
 125   1         P5M1 = 0x00;
 126   1         P5M0 = 0x10;
 127   1      
 128   1        //开漏输出  PxM1和PxM0对应配成11
 129   1        P3M1 = 0x0C;           // SDA和SCL口配成开漏，3.3V
 130   1        P3M0 = 0x0C;  
 131   1      
 132   1        P1M1 = 0x1C;           // BLUE和RED和GREEN口配成开漏，5V
 133   1        P1M0 = 0x1C;
 134   1      
 135   1        p_led_red = 1;    
 136   1        p_led_green = 1;
 137   1        p_mcu_ctr = 1;
 138   1      }
 139          
 140          /***********************************************************
 141                      根据编号控制灯亮灭
 142          ************************************************************/
 143          
 144          void led_light_ctrl(INT8U status)
 145          {
 146   1        
 147   1        switch(status)
 148   1        {
 149   2         case RED:  
 150   2              p_led_red   = LED_ON;   //红灯亮
 151   2              p_led_green = LED_OFF;    //绿灯灭
 152   2              p_led_blue  = LED_OFF;    //蓝灯灭
 153   2              break;
 154   2         case GREEN: 
 155   2              p_led_green = LED_ON;   //绿灯亮
 156   2              p_led_red   = LED_OFF;    //红灯灭
 157   2              p_led_blue  = LED_OFF;    //蓝灯灭
 158   2              break;
 159   2        
 160   2         case BLUE: 
 161   2              p_led_blue  = LED_ON;   //蓝灯亮
 162   2              p_led_red   = LED_OFF;    //红灯灭
 163   2              p_led_green = LED_OFF;    //绿灯灭
 164   2              break;  
 165   2      
 166   2         case RG_YELLOW:            //合成黄色
 167   2              p_led_red   = LED_ON;   //红灯亮
 168   2              p_led_green = LED_ON;   //绿灯亮
 169   2              p_led_blue  = LED_OFF;    //蓝灯灭
 170   2              break;
 171   2         case RB_GREEN: 
 172   2              p_led_green = LED_ON;   //绿灯亮
 173   2              p_led_red   = LED_ON;   //红灯亮
 174   2              p_led_blue  = LED_OFF;    //蓝灯灭
 175   2              break;
 176   2        
 177   2         case GB_BLUE: 
C51 COMPILER V9.52.0.0   MAIN                                                              08/19/2016 18:27:55 PAGE 4   

 178   2              p_led_blue  = LED_ON;   //蓝灯亮
 179   2              p_led_red   = LED_OFF;    //红灯灭
 180   2              p_led_green = LED_ON;   //绿灯亮
 181   2              break;
 182   2      
 183   2         case RGB_WHITE: 
 184   2              p_led_blue  = LED_ON;   //蓝灯亮
 185   2              p_led_red   = LED_ON;   //红灯亮
 186   2              p_led_green = LED_ON;   //绿灯亮
 187   2              break;
 188   2      
 189   2         default:
 190   2              p_led_red   = LED_OFF;    //红灯灭
 191   2              p_led_green = LED_OFF;    //绿灯灭
 192   2              p_led_blue  = LED_OFF;    //蓝灯灭
 193   2        }
 194   1      }
 195          
 196          
 197          /***********************************************************
 198                      singal_output 
 199          ************************************************************/
 200          //void singal_output(void)
 201          
 202          void KeyCheck(void)
 203          {
 204   1      //  UINT8  KeyStatus = 0;
 205   1        #if  (MACHINETYPE == T3N3_800U)
                    if (Scan_Val()==1)                                          //有按键  
                    {        
                    KeyStatus = 1;                    //按键状态置1         
                    } 
              
                    if (Scan_Val()!=1)
                    {   
                      KeyStatus = 0;
                    } 
              
                #elif  (MACHINETYPE == P3N3_800U)
 217   1            if (p_KEY_OK == 0)                                          //有按键  
 218   1            {        
 219   2            KeyStatus = 1;   
 220   2            KeyStatus_flag = 1;                       //  按键状态标志置1
 221   2            } 
 222   1              
 223   1            if (p_KEY_OK != 0)
 224   1            {   
 225   2              KeyStatus = 0;
 226   2            if (KeyStatus_flag == 1)  
 227   2            {
 228   3               KeyStatus_flag = 0;
 229   3               LedDelayCnt = 50;
 230   3            }
 231   2            } 
 232   1          
 233   1        #endif
 234   1      }
 235          
 236          /***********************************************************
 237                                    T0中断
 238          ************************************************************/
 239          void T0_int (void) interrupt 1
C51 COMPILER V9.52.0.0   MAIN                                                              08/19/2016 18:27:55 PAGE 5   

 240          {
 241   1        EA = 0;                 //定时器0开始计数 
 242   1          WDT_CONTR = 0x30;         //喂狗    
 243   1          EA = 1;
 244   1      }
 245          
 246          /*******************************************************************************
 247                        main program        
 248          *******************************************************************************/   
 249          int main(void) 
 250          {   
 251   1        INT8U sysStatus = 0;
 252   1        IO_Init();
 253   1          WDT_Reset();
 254   1        DelayMs(300);                              // 等待电源稳定
 255   1      
 256   1        #if  (MACHINETYPE == T3N3_800U)                                       
                  CBM7008_init(); 
                #endif
 259   1                                    // 必须开机后200ms再设置灵敏度  
 260   1        Timer0Init();                                     
 261   1        EA = 1;
 262   1        while(1)
 263   1        { 
 264   2          KeyCheck();     
 265   2      //    test = ~test;
 266   2              DelayMs(10);
 267   2        
 268   2          //灯输出由使能控制
 269   2          if (p_signal_input == 1)                     //无使能输入
 270   2          {
 271   3             //无使能输入
 272   3            if( LedDelayCnt != 0 )
 273   3            { LedDelayCnt--; }
 274   3            else
 275   3            {
 276   4              led_light_ctrl(NONE);                    //灯全灭
 277   4              LedStatus = NONE;
 278   4            }
 279   3      
 280   3            if (KeyStatus == 1)
 281   3            {
 282   4               LedStatus = KEY_PRESS_LED;                         ///////
 283   4            }
 284   3            sysStatus = 0;                         // 无使能
 285   3            
 286   3          }
 287   2          else                                           //有使能输入
 288   2          {
 289   3            //有使能输入
 290   3      
 291   3              LedStatus = EN_SIGNAL_ON_LED;          //使能对应灯色
 292   3              
 293   3            if (KeyStatus == 1)  
 294   3            { //有按键
 295   4              LedStatus = KEY_PRESS_LED;          //按键按下灯色
 296   4              sysStatus = 1;                //第一次按下
 297   4            }
 298   3            else  if(sysStatus == 1)
 299   3              { //无按键
 300   4              if( LedDelayCnt != 0 )
 301   4              { 
C51 COMPILER V9.52.0.0   MAIN                                                              08/19/2016 18:27:55 PAGE 6   

 302   5                LedDelayCnt--;
 303   5                LedStatus = KEY_PRESS_LED;
 304   5              }                                  //按键按下灯色 }
 305   4              else  if (KeyStatus_flag == 1)
 306   4              {       
 307   5                LedStatus = KEY_RELEASE_LED;        //  按键按下灯色
 308   5              }
 309   4              else
 310   4              {
 311   5                 LedStatus =  EN_SIGNAL_ON_LED;
 312   5              }
 313   4            }
 314   3              //在使能情况下不灭灯
 315   3              if (LedStatus == NONE)
 316   3            {
 317   4              LedStatus = EN_SIGNAL_ON_LED;
 318   4            }
 319   3                          
 320   3           }
 321   2      
 322   2           led_light_ctrl(LedStatus);
 323   2      
 324   2          // 24V输出由按键控制
 325   2          if (KeyStatus == 1)                                          //有按键 
 326   2          {        
 327   3             p_mcu_ctr = 0;                         //24V信号输出 
 328   3          // Delay250Us();
 329   3             DelayMs(1);
 330   3            if (p_singal_out == 1)                                  //反馈信号异常
 331   3            {    
 332   4              p_mcu_ctr = 1;                                       //关闭输出    0 关闭                     
 333   4            }
 334   3          }
 335   2          else //if(KeyStatus == 0)
 336   2          {
 337   3            p_mcu_ctr = 1;
 338   3          }
 339   2        }
 340   1      }     


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    363    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      5    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
